name: Build and Publish

on:
  push:
    branches:
      - main  # Especifica la rama en la que deseas que se desencadene el flujo de trabajo

jobs:
  build-and-publish:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Descarga tu código fuente en la máquina de GitHub Actions

    - name: Setup .NET Framework
      uses: Elskom/setup-latest-dotnet@main
      with:
      # major version of the .NET SDK to look for the newest version on in the feeds (optional, default is '7').
        VERSION_MAJOR: '4.6.1'
        # minor version of the .NET SDK to look for the newest version on in the feeds (optional, default is '0').
        VERSION_MINOR: '4.6.1'
        # version band of the .NET SDK to look for the newest version on in the feeds (optional, default is '1xx').
        # for different values look in the dotnet/installer github repository.
        VERSION_BAND: '4.6.1'
        # default value, this will override the input major, minor and band version for the .NET SDK to install (if set).
        SDK_VERSION: '4.6.1'
        # The list of versions of the runtime to install.
        # The value below is the default list.
        RUNTIME_VERSIONS: '6.0.x'

    - name: Restore dependencies
      run: nuget restore

    - name: Build
      run: msbuild /p:Configuration=Release  # Compila el proyecto en modo Release

    - name: Prepare ZIP file
      run: Compress-Archive -Path "path/to/your/application" -DestinationPath "published-app.zip"

    - name: Upload Artifact
      uses: actions/upload-artifact@v2
      with:
        name: published-app
        path: ./published-app.zip  # Sube el archivo ZIP como artefacto
    
    # Aquí podrías agregar pasos adicionales para despliegue o notificaciones
